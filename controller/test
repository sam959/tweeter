const request = require("request");

const streamURL = new URL(
    "https://api.twitter.com/2/tweets/search/stream?tweet.fields=context_annotations&expansions=author_id"
);

const errorMessage = {
    title: "Please Wait",
    detail: "Waiting for new Tweets to be posted...",
};

const authMessage = {
    title: "Could not authenticate",
    details: [
        `Please make sure your bearer token is correct`,
    ],
    type: "https://developer.twitter.com/en/docs/authentication",
};

const sleep = async (delay) => {
    return new Promise((resolve) => setTimeout(() => resolve(true), delay));
};

const streamTweets = (socket) => {

    const config = {
        url: streamURL,
        auth: {
            bearer: process.env.BEARER_TOKEN,
        },
        timeout: 31000,
    };

    try {
        const stream = request.get(config);

        console.log('requesting tweets stream...')
        stream
            .on("data", (data) => {
                try {
                    const json = JSON.parse(data);
                    if (json.connection_issue) {
                        socket.emit("error", json);
                        reconnect(stream, socket, token);
                    } else {
                        if (json.data) {
                            socket.emit("tweet", json.data.text);
                        } else {
                            socket.emit("authError", json);
                        }
                    }
                } catch (e) {
                    socket.emit("heartbeat");
                }
            })
            .on("error", (error) => {
                // Connection timed out
                socket.emit("error", errorMessage);
                reconnect(stream, socket);
            });
    } catch (e) {
        socket.emit("authError", authMessage);
    }
};

const reconnect = async (stream, socket) => {
    timeout++;
    stream.abort();
    await sleep(2 ** timeout * 1000);
    streamTweets(socket);
};

module.exports = streamTweets;